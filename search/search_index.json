{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"Pages/","title":"Home","text":"The Reloaded MkDocs Theme      A Theme for MkDocs Material.          That resembles the look of Reloaded."},{"location":"Pages/#about","title":"About","text":"<p>This it the NexusMods theme for Material-MkDocs, inspired by the look of Reloaded-II.  </p> <p>The overall wiki theme should look fairly close to the actual launcher appearance.  </p>"},{"location":"Pages/#setup-from-scratch","title":"Setup From Scratch","text":"<ul> <li>Add this repository as submodule to <code>docs/Reloaded</code>.</li> <li>Save the following configuration as <code>mkdocs.yml</code> in your repository root.</li> </ul> <pre><code>site_name: Reloaded MkDocs Theme\nsite_url: https://github.com/Reloaded-Project/Reloaded.MkDocsMaterial.Themes.R2\n\nrepo_name: Reloaded-Project/Reloaded.MkDocsMaterial.Themes.R2\nrepo_url: https://github.com/Reloaded-Project/Reloaded.MkDocsMaterial.Themes.R2\n\nextra:\nsocial:\n- icon: fontawesome/brands/github\nlink: https://github.com/Reloaded-Project\n- icon: fontawesome/brands/twitter\nlink: https://twitter.com/thesewer56?lang=en-GB\n\nextra_css:\n- Reloaded/Stylesheets/extra.css\n\nmarkdown_extensions:\n- admonition\n- tables\n- pymdownx.details\n- pymdownx.highlight\n- pymdownx.superfences:\ncustom_fences:\n- name: mermaid\nclass: mermaid\nformat: !!python/name:pymdownx.superfences.fence_code_format\n- pymdownx.tasklist\n- def_list\n- meta\n- md_in_html\n- attr_list\n- footnotes\n- pymdownx.tabbed:\nalternate_style: true\n- pymdownx.emoji:\nemoji_index: !!python/name:materialx.emoji.twemoji\nemoji_generator: !!python/name:materialx.emoji.to_svg\n\ntheme:\nname: material\npalette:\nscheme: reloaded-slate\nfeatures:\n- navigation.instant\n\nplugins:\n- search\n\nnav:\n- Home: index.md\n</code></pre> <ul> <li>Add a GitHub Actions workload in <code>.github/workflows/DeployMkDocs.yml</code>.</li> </ul> <pre><code>name: DeployMkDocs\n\n# Controls when the action will run. \non:\n# Triggers the workflow on push on the master branch\npush:\nbranches: [ main ]\n\n# Allows you to run this workflow manually from the Actions tab\nworkflow_dispatch:\n\n# A workflow run is made up of one or more jobs that can run sequentially or in parallel\njobs:\n# This workflow contains a single job called \"build\"\nbuild:\n# The type of runner that the job will run on\nruns-on: ubuntu-latest\n\n# Steps represent a sequence of tasks that will be executed as part of the job\nsteps:\n\n# Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it\n- name: Checkout Branch\nuses: actions/checkout@v2\nwith:\nsubmodules: recursive\n\n# Deploy MkDocs\n- name: Deploy MkDocs\n# You may pin to the exact commit or the version.\n# uses: mhausenblas/mkdocs-deploy-gh-pages@66340182cb2a1a63f8a3783e3e2146b7d151a0bb\nuses: mhausenblas/mkdocs-deploy-gh-pages@master\nenv:\nGITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\nREQUIREMENTS: ./docs/requirements.txt\n</code></pre> <ul> <li>Push to GitHub, this should produce a GitHub Pages site.  </li> <li>Go to <code>Settings -&gt; Pages</code> in your repo and select <code>gh-pages</code> branch to enable GitHub pages. </li> </ul> <p>Your page should then be live.</p> <p>Tip</p> <p>Refer to Contributing for instructions on how to locally edit and modify the wiki.</p> <p>Note</p> <p>For Reloaded3 theme use <code>reloaded3-slate</code> instead of <code>reloaded-slate</code>.</p>"},{"location":"Pages/#extra","title":"Extra","text":"<p>Info</p> <p>Most documentation pages will also include additional plugins; some which are used in the pages here. Here is a sample complete mkdocs.yml you can copy to your project for reference.  </p>"},{"location":"Pages/#technical-questions","title":"Technical Questions","text":"<p>If you have questions/bug reports/etc. feel free to Open an Issue.</p> <p>Happy Documenting \u2764\ufe0f</p>"},{"location":"Pages/contributing/","title":"Contributing to the Wiki: Locally","text":"<p>Info</p> <p>This page shows you how to contribute to any documentation page or wiki  based on this template.</p> <p>Note</p> <p>This theme is forked from my theme for Nexus Docs; and this page is synced with that.</p>"},{"location":"Pages/contributing/#tutorial","title":"Tutorial","text":"<p>Note</p> <p>If you are editing the repository with the theme itself on Windows, it might be a good idea to run <code>git config core.symlinks true</code> first to allow git to create symlinks on clone.</p> <p>You should learn the basics of <code>git</code>, an easy way is to give GitHub Desktop (Tutorial) a go. It's only 15 minutes \ud83d\ude00.</p> <ol> <li>Create a GitHub account.</li> <li> <p>Fork this repository:</p> <p></p> <p>This will create a copy of the repository on your own user account, which you will be able to edit.</p> </li> <li> <p>Clone this repository.</p> <p>For example, using GitHub Desktop: </p> </li> <li> <p>Make changes inside the <code>docs</code> folder.</p> <p></p> <p>Consider using a Markdown Cheat Sheet if you are new to markdown.</p> <p>I recommend using a markdown editor such as <code>Typora</code>. Personally I just work from inside <code>Rider</code>.  </p> </li> <li> <p>Commit the changes and push to GitHub.</p> </li> <li> <p>Open a <code>Pull Request</code>.</p> <p></p> <p>Opening a <code>Pull Request</code> will allow us to review your changes before adding them with the main official page. If everything's good, we'll hit the merge button and add your changes to the official repository.</p> </li> </ol>"},{"location":"Pages/contributing/#website-live-preview","title":"Website Live Preview","text":"<p>If you are working on the wiki locally, you can generate a live preview the full website. Here's a quick guide of how you could do it from your <code>command prompt</code> (cmd).</p> <ol> <li> <p>Install Python 3</p> <p>If you have <code>winget</code> installed, or Windows 11, you can do this from the command prompt.</p> Windows (winget)Archlinux <pre><code>winget install Python.Python.3\n</code></pre> <pre><code>pacman -S python-pip # you should already have Python\n</code></pre> <p>Otherwise download Python 3 from the official website or package manager.</p> </li> <li> <p>Install Material for MkDocs and Plugins (Python package)</p> Windows/OSXLinux <pre><code># Restart your command prompt before running this command.\npip install mkdocs-material\npip install mkdocs-redirects\n</code></pre> <p>On Linux, there is a chance that <code>python</code> might be a core part of your OS, meaning that you ideally shouldn't touch the system installation.</p> <p>Use virtual environments instead.</p> <pre><code>python -m venv mkdocs # Create the environment\nsource ~/mkdocs/bin/activate # Enter the environment\n\npip install mkdocs-material\npip install mkdocs-redirects\n</code></pre> <p>Make sure you enter the environment before any time you run mkdocs.</p> </li> <li> <p>Open a command prompt in the folder containing <code>mkdocs.yml</code>. and run the site locally.     <pre><code># Move to project folder.\ncd &lt;Replace this with full path to folder containing `mkdocs.yml`&gt;\nmkdocs serve\n</code></pre></p> <p></p> <p>Copy the address to your web browser and enjoy the live preview; any changes you save will be shown instantly.</p> </li> </ol>"},{"location":"Pages/license/","title":"The Reloaded Project License","text":"<p>Most components of the Reloaded are governed by the GPLv3 license.</p> <p>In some, albeit rare scenarios, certain libraries might be licensed under LGPLv3 instead.</p> <p>This is a FAQ meant to clarify the licensing choice and its implications. Please note, though, that the full license text is the final legal authority.</p>"},{"location":"Pages/license/#why-was-gpl-v3-chosen","title":"Why was GPL v3 chosen?","text":"<p>The primary objective is to prevent closed-source, commercial exploitation of the project.</p> <p>We want to ensure that the project isn't used within a proprietary environment for profit-making purposes such as:</p> <ul> <li>Being sold behind a Patreon paywall.</li> <li>Being integrated into a closed-source commercial product for sale.</li> </ul> <p>The Reloaded Project is a labour of love from unpaid hobbyist volunteers.</p> <p>Exploiting that work for profit feels fundamentally unfair.</p> <p>While the GPLv3 license doesn't prohibit commercial use outright, it does prevent commercial exploitation by requiring that contributions are given back to the open-source community.</p> <p>In that fashion, everyone can benefit from the projects under the Reloaded label.</p>"},{"location":"Pages/license/#can-i-use-reloaded-libraries-commercially","title":"Can I use Reloaded Libraries Commercially?","text":"<p>You can as long as the resulting produce is also licensed under GPLv3, and thus open source.</p>"},{"location":"Pages/license/#can-i-use-reloaded-libraries-in-a-closed-source-application","title":"Can I use Reloaded Libraries in a closed-source application?","text":"<p>The license terms do not permit this.</p> <p>However, if your software is completely non-commercial, meaning it's neither sold for profit, funded in development, nor hidden behind a paywall (like Patreon), we probably just look the other way.</p> <p>This often applies to non-professional programmers, learners, or those with no intent to exploit the project. We believe in understanding and leniency for those who might not know better.</p> <p>GPL v3 exists to protect the project and its contributors. If you're not exploiting the project for commercial  gain, you're not hurting us; and we will not enforce the terms of the GPL.</p> <p>If you are interested in obtaining a commercial license, or want an explicit written exemption,  please get in touch with the repository owners.</p>"},{"location":"Pages/license/#can-i-link-reloaded-libraries-staticallydynamically","title":"Can I link Reloaded Libraries statically/dynamically?","text":"<p>Yes, as long as you adhere to the GPLv3 license terms, you're permitted to statically link Reloaded Libraries into your project, for instance, through the use of NativeAOT or ILMerge.</p>"},{"location":"Pages/license/#guidelines-for-non-commercial-use","title":"Guidelines for Non-Commercial Use","text":"<p>We support and encourage the non-commercial use of Reloaded Libraries. Non-commercial use generally refers to the usage of our libraries for personal projects, educational purposes, academic research, or use by non-profit organizations.</p>"},{"location":"Pages/license/#personal-projects","title":"Personal Projects","text":"<p>You're free to use our libraries for projects that you undertake for your own learning, hobby or personal enjoyment. This includes creating mods for your favorite games or building your own applications for personal use.</p>"},{"location":"Pages/license/#educational-use","title":"Educational Use","text":"<p>Teachers and students are welcome to use our libraries as a learning resource. You can incorporate them into your teaching materials, student projects, coding bootcamps, workshops, etc.</p>"},{"location":"Pages/license/#academic-research","title":"Academic Research","text":"<p>Researchers may use our libraries for academic and scholarly research. We'd appreciate if you cite our work in any publications that result from research involving our libraries.</p>"},{"location":"Pages/license/#non-profit-organizations","title":"Non-profit Organizations","text":"<p>If you're part of a registered non-profit organization, you can use our libraries in your projects. However, any derivative work that uses our libraries must also be released under the GPL.</p> <p>Please remember, if your usage of our libraries evolves from non-commercial to commercial, you must ensure compliance with the terms of the GPL v3 license.</p>"},{"location":"Pages/license/#attribution-requirements","title":"Attribution Requirements","text":"<p>As Reloaded Project is a labor of love, done purely out of passion and with an aim to contribute to the broader community, we highly appreciate your support in providing attribution when using our libraries.  </p> <p>While not legally mandatory under GPL v3, it is a simple act that can go a long way in recognizing the efforts of our contributors and fostering an open and collaborative atmosphere.</p> <p>If you choose to provide attribution (and we hope you do!), here are some guidelines:</p> <ul> <li> <p>Acknowledge the Use of Reloaded Libraries: Mention that your project uses or is based on Reloaded libraries.   This could be in your project's readme, a credits page on a website, a manual, or within the software itself.</p> </li> <li> <p>Link to the Project: If possible, provide a link back to the Reloaded Project.   This allows others to explore and potentially benefit from our work.</p> </li> </ul> <p>Remember, attribution is more than just giving credit,,, it's a way of saying thank you \ud83d\udc49\ud83d\udc48, fostering reciprocal respect, and acknowledging the power of collaborative open-source development.</p> <p>We appreciate your support and look forward to seeing what amazing projects you create using Reloaded libraries!</p>"},{"location":"Pages/license/#code-from-mitbsd-licensed-projects","title":"Code from MIT/BSD Licensed Projects","text":"<p>In some rare instances, code from more permissively licensed projects, such as those under the <code>MIT</code> or <code>BSD</code> licenses, may be referenced, incorporated, or slightly modified within the Reloaded Project.</p> <p>It's important to us to respect the terms and intentions of these permissive licenses, which often allow their code to be used in a wide variety of contexts, including in GPL-licensed projects like ours.</p> <p>In these cases, the Reloaded Project is committed to clearly disclosing the usage of such code:</p> <ul> <li> <p>Method-Level Disclosure: For individual methods or small code snippets, we use appropriate   attribution methods, like programming language attributes. For example, methods borrowed or adapted   from MIT-licensed projects might be marked with a <code>[MITLicense]</code> attribute.</p> </li> <li> <p>File-Level Disclosure: For larger amounts of code, such as entire files or modules, we'll include   the original license text at the top of the file and clearly indicate which portions of the code originate   from a differently-licensed project.</p> </li> <li> <p>Project-Level Disclosure: If an entire library or significant portion of a project under a more permissive   license is used, we will include an acknowledgment in a prominent location, such as the readme file or the   project's license documentation.</p> </li> </ul> <p>This approach ensures we honor the contributions of the open source community at large, respect the original licenses, and maintain transparency with our users about where code originates from.</p> <p>Any files/methods or snippets marked with those attributes may be consumed using their original license terms.  </p> <p>i.e. If a method is marked with <code>[MITLicense]</code>, you may use it under the terms of the MIT license.  </p>"},{"location":"Pages/license/#contributing-to-the-reloaded-project","title":"Contributing to the Reloaded Project","text":"<p>We welcome and appreciate contributions to the Reloaded Project! By contributing, you agree to share your changes under the same GPLv3 license, helping to make the project better for everyone.</p>"},{"location":"Pages/testing-zone/","title":"Testing Zone","text":"<p>Info</p> <p>This is a dummy page with various Material MkDocs controls and features scattered throughout for testing.</p>"},{"location":"Pages/testing-zone/#custom-admonitions","title":"Custom Admonitions","text":"<p>Reloaded Admonition</p> <p>An admonition featuring a Reloaded logo. My source is in Stylesheets/extra.css as <code>Custom 'reloaded' admonition</code>.  </p> <p>Heart Admonition</p> <p>An admonition featuring a heart; because we want to contribute back to the open source community. My source is in Stylesheets/extra.css as <code>Custom 'reloaded heart' admonition</code>.</p> <p>Nexus Admonition</p> <p>An admonition featuring a Nexus logo. My source is in Stylesheets/extra.css as <code>Custom 'nexus' admonition</code>.  </p> <p>Heart Admonition</p> <p>An admonition featuring a heart; because we want to contribute back to the open source community. My source is in Stylesheets/extra.css as <code>Custom 'nexus heart' admonition</code>.  </p>"},{"location":"Pages/testing-zone/#mermaid-diagram","title":"Mermaid Diagram","text":"<p>Flowchart (Source: Nexus Archive Library):  </p> <pre><code>flowchart TD\n    subgraph Block 2\n        BigFile1.bin\n    end\n\n    subgraph Block 1\n        BigFile0.bin\n    end\n\n    subgraph Block 0\n        ModConfig.json -.-&gt; Updates.json \n        Updates.json -.-&gt; more[\"... more .json files\"]        \n    end</code></pre> <p>Sequence Diagram (Source: Reloaded3 Specification):  </p> <pre><code>sequenceDiagram\n\n    % Define Items\n    participant Mod Loader\n    participant Virtual FileSystem (VFS)\n    participant CRI CPK Archive Support\n    participant Persona 5 Royal Support\n    participant Joker Costume\n\n    % Define Actions\n    Mod Loader-&gt;&gt;Persona 5 Royal Support: Load Mod\n    Persona 5 Royal Support-&gt;&gt;Mod Loader: Request CRI CPK Archive Support API\n    Mod Loader-&gt;&gt;Persona 5 Royal Support: Receive CRI CPK Archive Support Instance\n\n    Mod Loader-&gt;&gt;Joker Costume: Load Mod\n    Mod Loader--&gt;Persona 5 Royal Support: Notification: 'Loaded Joker Costume'\n    Persona 5 Royal Support-&gt;&gt;CRI CPK Archive Support: Add Files from 'Joker Costume' to CPK Archive (via API)</code></pre> <p>State Diagram (Source: Mermaid Docs):  </p> <pre><code>stateDiagram-v2\n    [*] --&gt; Still\n    Still --&gt; [*]\n\n    Still --&gt; Moving\n    Moving --&gt; Still\n    Moving --&gt; Crash\n    Crash --&gt; [*]</code></pre> <p>Class Diagram (Arbitrary)</p> <pre><code>classDiagram\n    class Animal\n    `NexusMobile\u2122` &lt;|-- Car</code></pre> <p>Note</p> <p>At time of writing, version of Mermaid is a bit outdated here; and other diagrams might not render correctly (even on unmodified theme); thus certain diagrams have been omitted from here.</p>"},{"location":"Pages/testing-zone/#code-block","title":"Code Block","text":"<p>Snippet from C# version of Sewer's Virtual FileSystem (VFS):</p> <pre><code>/// &lt;summary&gt;\n/// Tries to get files for a specific folder, assuming the input path is already in upper case.\n/// &lt;/summary&gt;\n/// &lt;param name=\"folderPath\"&gt;The folder to find. Already lowercase.&lt;/param&gt;\n/// &lt;param name=\"value\"&gt;The returned folder instance.&lt;/param&gt;\n/// &lt;returns&gt;True if found, else false.&lt;/returns&gt;\n[MethodImpl(MethodImplOptions.AggressiveInlining)]\npublic bool TryGetFolderUpper(ReadOnlySpan&lt;char&gt; folderPath, out SpanOfCharDict&lt;TTarget&gt; value)\n{\n// Must be O(1)\nvalue = default!;        // Compare equality.\n// Note to devs: Do not invert branches, we optimise for hot paths here.\nif (folderPath.StartsWith(Prefix))\n{\n// Check for subfolder in branchless way.\n// In CLR, bool is length 1, so conversion to byte should be safe.\n// Even suppose it is not; as long as code is little endian; truncating int/4 bytes to byte still results \n// in correct answer.\nvar hasSubfolder = Prefix.Length != folderPath.Length;\nvar hasSubfolderByte = Unsafe.As&lt;bool, byte&gt;(ref hasSubfolder);\nvar nextFolder = folderPath.SliceFast(Prefix.Length + hasSubfolderByte);\n\nreturn SubfolderToFiles.TryGetValue(nextFolder, out value!);\n}\n\nreturn false;\n}\n</code></pre> <p>Something more number heavy, Fast Inverse Square Root from Quake III Arena (unmodified). <pre><code>float Q_rsqrt( float number )\n{\nlong i;\nfloat x2, y;\nconst float threehalfs = 1.5F;\n\nx2 = number * 0.5F;\ny  = number;\ni  = * ( long * ) &amp;y;                       // evil floating point bit level hacking\ni  = 0x5f3759df - ( i &gt;&gt; 1 );               // what the fuck? \ny  = * ( float * ) &amp;i;\ny  = y * ( threehalfs - ( x2 * y * y ) );   // 1st iteration\n//  y  = y * ( threehalfs - ( x2 * y * y ) );   // 2nd iteration, this can be removed\n\nreturn y;\n}\n</code></pre></p>"},{"location":"Pages/testing-zone/#default-admonitions","title":"Default Admonitions","text":"<p>Note</p> <p>Test</p> <p>Abstract</p> <p>Test</p> <p>Info</p> <p>Test</p> <p>Tip</p> <p>Test</p> <p>Success</p> <p>Test</p> <p>Question</p> <p>Test</p> <p>Warning</p> <p>Test</p> <p>Failure</p> <p>Test</p> <p>Danger</p> <p>Test</p> <p>Bug</p> <p>Test</p> <p>Example</p> <p>Test</p> <p>Quote</p> <p>Test</p>"},{"location":"Pages/testing-zone/#tables","title":"Tables","text":"Method Description <code>GET</code>      Fetch resource <code>PUT</code>  Update resource <code>DELETE</code>      Delete resource"}]}